{
  // Use IntelliSense to find out which attributes exist for C# debugging
  // Use hover for the description of the existing attributes
  // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
  "version": "0.2.0",
  "configurations": [
    {
      "name": "Uno Platform Mobile Debug",
      "type": "Uno",
      "request": "launch",
      // any Uno* task will do, this is simply to satisfy vscode requirement when a launch.json is present
      "preLaunchTask": "Uno: android | Debug | android-x64"
    },
    {
      // Use IntelliSense to find out which attributes exist for C# debugging
      // Use hover for the description of the existing attributes
      // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
      "name": "Uno Platform WebAssembly Debug (Chrome)",
      "type": "chrome",
      "request": "launch",
      "url": "http://localhost:5000",
      "webRoot": "${workspaceFolder}/APS_Optimizer_V3",
      "inspectUri": "{wsProtocol}://{url.hostname}:{url.port}/_framework/debug/ws-proxy?browser={browserInspectUri}",
      "timeout": 30000,
      "preLaunchTask": "build-wasm",
      "server": {
        "runtimeExecutable": "dotnet",
        "program": "run",
        "args": [
          "--no-build",
          "-f",
          "net8.0-browserwasm",
          "--launch-profile",
          "APS_Optimizer_V3 (WebAssembly)"
        ],
        "outputCapture": "std",
        "timeout": 30000,
        "cwd": "${workspaceFolder}/APS_Optimizer_V3"
      }
    },
    {
      // Use IntelliSense to find out which attributes exist for C# debugging
      // Use hover for the description of the existing attributes
      // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
      "name": "Uno Platform WebAssembly Debug (Edge)",
      "type": "msedge",
      "request": "launch",
      "url": "http://localhost:5000",
      "webRoot": "${workspaceFolder}/APS_Optimizer_V3",
      "inspectUri": "{wsProtocol}://{url.hostname}:{url.port}/_framework/debug/ws-proxy?browser={browserInspectUri}",
      "timeout": 30000,
      "preLaunchTask": "build-wasm",
      "server": {
        "runtimeExecutable": "dotnet",
        "program": "run",
        "args": [
          "--no-build",
          "-f",
          "net8.0-browserwasm",
          "--launch-profile",
          "APS_Optimizer_V3 (WebAssembly)"
        ],
        "outputCapture": "std",
        "timeout": 30000,
        "cwd": "${workspaceFolder}/APS_Optimizer_V3"
      }
    },
    {
      // Use IntelliSense to find out which attributes exist for C# debugging
      // Use hover for the description of the existing attributes
      // For further information visit https://github.com/OmniSharp/omnisharp-vscode/blob/master/debugger-launchjson.md
      "name": "Uno Platform Desktop Debug",
      "type": "coreclr",
      "request": "launch",
      "preLaunchTask": "build-desktop",
      // If you have changed target frameworks, make sure to update the program path.
      "program": "${workspaceFolder}/APS_Optimizer_V3/bin/Debug/net8.0-desktop/APS_Optimizer_V3.dll",
      "args": [],
      "launchSettingsProfile": "APS_Optimizer_V3 (Desktop)",
      "env": {
        "DOTNET_MODIFIABLE_ASSEMBLIES": "debug"
      },
      "cwd": "${workspaceFolder}/APS_Optimizer_V3",
      // For more information about the 'console' field, see https://aka.ms/VSCode-CS-LaunchJson-Console
      "console": "internalConsole",
      "stopAtEntry": false
    },
    {
      "name": "Uno Platform Windows Debug", // Distinct name
      "type": "coreclr", // Still a .NET Core app
      "request": "launch",
      "preLaunchTask": "build-windows", // Reference a task that builds the Windows target (see tasks.json below)
      // --- POINT TO THE WINDOWS DLL ---
      // Adjust the TFM folder name if it's slightly different (e.g., includes RID like win10-x64)
      "program": "${workspaceFolder}/APS_Optimizer_V3/bin/Debug/net8.0-windows10.0.26100/APS_Optimizer_V3.dll",
      "args": [],
      // --- SET WORKING DIRECTORY TO WINDOWS OUTPUT ---
      // This is where the app will run from, crucial for finding relative files like cryptominisat5.exe
      // Adjust if your output has an RID subfolder like win10-x64
      "cwd": "${workspaceFolder}/APS_Optimizer_V3/bin/Debug/net8.0-windows10.0.26100/",
      "env": {
        "DOTNET_MODIFIABLE_ASSEMBLIES": "debug"
      },
      "console": "internalConsole",
      "stopAtEntry": false
      // "launchSettingsProfile" is usually omitted for non-desktop launches
    }
  ]
}
